	-- Creación de la base de datos
	CREATE DATABASE turismo_universo;
	USE turismo_universo;

	-- Tabla de Usuarios (Clientes y Empleados)
	CREATE TABLE usuarios (
		usuario_id INT AUTO_INCREMENT PRIMARY KEY,
		nombre VARCHAR(100) NOT NULL,
		email VARCHAR(100) UNIQUE NOT NULL,
		contraseña VARCHAR(255) NOT NULL,  -- Guardar hash de la contraseña
		tipo_usuario ENUM('cliente', 'empleado', 'admin') DEFAULT 'cliente',
		fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		estado ENUM('activo', 'inactivo') DEFAULT 'activo',
		usuario VARCHAR(30) NOT NULL UNIQUE  -- Nueva columna agregada
	);

	-- Datos de ejemplo para usuarios
	INSERT INTO usuarios (nombre, email, contraseña, tipo_usuario, estado, usuario) VALUES
	('Juan Perez', 'juan@example.com', 'contraseña', 'cliente', 'activo', 'JuanPerez'),
	('Maria Gomez', 'maria@example.com', 'contraseña', 'empleado', 'activo', 'MariaGomez');

	-- Tabla de Empleados
	CREATE TABLE empleados (
		empleado_id INT AUTO_INCREMENT PRIMARY KEY,
		usuario_id INT NOT NULL,
		cargo VARCHAR(50),
		sucursal_id INT,
		FOREIGN KEY (usuario_id) REFERENCES usuarios(usuario_id) ON DELETE CASCADE
	);

	-- Tabla de Sucursales
	CREATE TABLE sucursales (
		sucursal_id INT AUTO_INCREMENT PRIMARY KEY,
		nombre VARCHAR(100),
		ubicacion VARCHAR(255),
		telefono VARCHAR(20)
	);

	-- Tabla de Rutas
	CREATE TABLE rutas (
		ruta_id INT AUTO_INCREMENT PRIMARY KEY,
		origen VARCHAR(100) NOT NULL,
		destino VARCHAR(100) NOT NULL,
		precio DECIMAL(10, 2) NOT NULL,
		horario_salida TIME NOT NULL,
		duracion TIME NOT NULL
	);

	-- Tabla de Buses
	CREATE TABLE buses (
		bus_id INT AUTO_INCREMENT PRIMARY KEY,
		placa VARCHAR(10) UNIQUE NOT NULL,
		modelo VARCHAR(50),
		capacidad INT NOT NULL,
		año INT NOT NULL,
		estado ENUM('activo', 'inactivo') DEFAULT 'activo'
	);

	-- Tabla de Mantenimientos (para los Buses)
	CREATE TABLE mantenimientos (
		mantenimiento_id INT AUTO_INCREMENT PRIMARY KEY,
		bus_id INT NOT NULL,
		fecha_mantenimiento DATE NOT NULL,
		tipo_mantenimiento VARCHAR(100) NOT NULL,
		costo DECIMAL(10, 2),
		FOREIGN KEY (bus_id) REFERENCES buses(bus_id) ON DELETE CASCADE
	);

	-- Tabla de Conductores
	CREATE TABLE conductores (
		conductor_id INT AUTO_INCREMENT PRIMARY KEY,
		nombre VARCHAR(100) NOT NULL,
		dni VARCHAR(20) UNIQUE NOT NULL,
		licencia VARCHAR(50) NOT NULL,
		telefono VARCHAR(20),
		fecha_contratacion DATE,
		estado ENUM('activo', 'inactivo') DEFAULT 'activo'
	);

	-- Tabla de Papeletas (Infracciones para Conductores)
	CREATE TABLE papeletas (
		papeleta_id INT AUTO_INCREMENT PRIMARY KEY,
		conductor_id INT NOT NULL,
		fecha_infraccion DATE NOT NULL,
		tipo_infraccion VARCHAR(255) NOT NULL,
		monto DECIMAL(10, 2) NOT NULL,
		FOREIGN KEY (conductor_id) REFERENCES conductores(conductor_id) ON DELETE CASCADE
	);

	-- Tabla de Carnet de Sanidad (Conductores)
	CREATE TABLE carnet_sanidad (
		carnet_id INT AUTO_INCREMENT PRIMARY KEY,
		conductor_id INT NOT NULL,
		fecha_emision DATE NOT NULL,
		fecha_vencimiento DATE NOT NULL,
		estado ENUM('vigente', 'vencido') DEFAULT 'vigente',
		FOREIGN KEY (conductor_id) REFERENCES conductores(conductor_id) ON DELETE CASCADE
	);

	-- Tabla de Programación de Rutas
	CREATE TABLE programacion_rutas (
		programacion_id INT AUTO_INCREMENT PRIMARY KEY,
		ruta_id INT NOT NULL,
		bus_id INT NOT NULL,
		conductor_id INT NOT NULL,
		fecha_salida DATE NOT NULL,
		hora_salida TIME NOT NULL,
		hora_llegada TIME,
		estado ENUM('programado', 'en_viaje', 'completado', 'cancelado') DEFAULT 'programado',
		FOREIGN KEY (ruta_id) REFERENCES rutas(ruta_id) ON DELETE CASCADE,
		FOREIGN KEY (bus_id) REFERENCES buses(bus_id) ON DELETE CASCADE,
		FOREIGN KEY (conductor_id) REFERENCES conductores(conductor_id) ON DELETE CASCADE
	);

	-- Tabla de Boletos
	CREATE TABLE boletos (
		boleto_id INT AUTO_INCREMENT PRIMARY KEY,
		usuario_id INT NOT NULL,
		ruta_id INT NOT NULL,
		fecha_compra TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		asiento INT NOT NULL,
		estado ENUM('reservado', 'pagado', 'cancelado') DEFAULT 'reservado',
		FOREIGN KEY (usuario_id) REFERENCES usuarios(usuario_id) ON DELETE CASCADE,
		FOREIGN KEY (ruta_id) REFERENCES rutas(ruta_id) ON DELETE CASCADE
	);

	-- Tabla de Pagos
	CREATE TABLE pagos (
		pago_id INT AUTO_INCREMENT PRIMARY KEY,
		boleto_id INT NOT NULL,
		metodo_pago ENUM('tarjeta', 'efectivo', 'transferencia') NOT NULL,
		estado_pago ENUM('pendiente', 'completado') DEFAULT 'pendiente',
		fecha_pago TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		FOREIGN KEY (boleto_id) REFERENCES boletos(boleto_id) ON DELETE CASCADE
	);

	-- Tabla de Historial de Viajes
	CREATE TABLE historial_viajes (
		historial_id INT AUTO_INCREMENT PRIMARY KEY,
		usuario_id INT NOT NULL,
		boleto_id INT NOT NULL,
		fecha_viaje DATE NOT NULL,
		origen VARCHAR(100) NOT NULL,
		destino VARCHAR(100) NOT NULL,
		estado ENUM('completado', 'cancelado') DEFAULT 'completado',
		FOREIGN KEY (usuario_id) REFERENCES usuarios(usuario_id) ON DELETE CASCADE,
		FOREIGN KEY (boleto_id) REFERENCES boletos(boleto_id) ON DELETE CASCADE
	);

	-- Tabla de Reportes de Ventas (solo para empleados)
	CREATE TABLE reportes_ventas (
		reporte_id INT AUTO_INCREMENT PRIMARY KEY,
		fecha_reporte DATE NOT NULL,
		total_ventas INT NOT NULL,
		total_boletos_vendidos INT NOT NULL,
		total_ingresos DECIMAL(10, 2) NOT NULL,
		empleado_id INT NOT NULL,
		FOREIGN KEY (empleado_id) REFERENCES empleados(empleado_id) ON DELETE cascade
	);

	-- Tabla de Roles (para control de acceso y permisos)
	CREATE TABLE roles (
		rol_id INT AUTO_INCREMENT PRIMARY KEY,
		nombre_rol VARCHAR(50) NOT NULL UNIQUE
	);

	-- Tabla de Permisos (CRUD: Crear, Leer, Actualizar, Eliminar)
	CREATE TABLE permisos (
		permiso_id INT AUTO_INCREMENT PRIMARY KEY,
		nombre_permiso VARCHAR(50) NOT NULL UNIQUE
	);

	-- Tabla Intermedia Roles_Permisos
	CREATE TABLE roles_permisos (
		rol_id INT NOT NULL,
		permiso_id INT NOT NULL,
		PRIMARY KEY (rol_id, permiso_id),
		FOREIGN KEY (rol_id) REFERENCES roles(rol_id) ON DELETE CASCADE,
		FOREIGN KEY (permiso_id) REFERENCES permisos(permiso_id) ON DELETE CASCADE
	);

	-- Tabla Intermedia Usuarios_Roles
	CREATE TABLE usuarios_roles (
		usuario_id INT NOT NULL,
		rol_id INT NOT NULL,
		PRIMARY KEY (usuario_id, rol_id),
		FOREIGN KEY (usuario_id) REFERENCES usuarios(usuario_id) ON DELETE CASCADE,
		FOREIGN KEY (rol_id) REFERENCES roles(rol_id) ON DELETE CASCADE
	);

	-- Índices para mejorar el rendimiento
	CREATE INDEX idx_usuario_email ON usuarios(email);
	CREATE INDEX idx_boletos_usuario_id ON boletos(usuario_id);
	CREATE INDEX idx_boletos_ruta_id ON boletos(ruta_id);
	CREATE INDEX idx_empleados_usuario_id ON empleados(usuario_id);
	CREATE INDEX idx_rutas_origen_destino ON rutas(origen, destino);
